{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample server IDHub server. For this sample, you can use the api key `special-key` to test the authorization filters.",
    "version": "1.0.0",
    "title": "IDHub API Draft",
    "contact": {
      "email": "don@idhub.network"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "dev.idhub.network:5906",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "user",
      "description": "Operations about users",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://dev.idhub.network:3274/"
      }
    },
    {
      "name": "email",
      "description": "Operations about emails"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "",
        "operationId": "createUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/users/login": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Sign in the system",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "The email for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              },
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/users/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Sign out current logged-in user session",
        "description": "",
        "operationId": "logoutUser",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/users/{email}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by email",
        "description": "",
        "operationId": "getUserByEmail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "The email that needs to be fetched. Use user1 for testing.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid email supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update user",
        "description": "This can only be done by the logged-in user.",
        "operationId": "updateUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "email that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid email supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "description": "This can only be done by the logged-in user.",
        "operationId": "deleteUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "The email that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid email supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/emails/send": {
      "post": {
        "tags": [
          "email"
        ],
        "summary": "Send email activation code",
        "description": "",
        "operationId": "emailSend",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          "400": {
            "description": "Invalid email"
          },
          "404": {
            "description": "Email not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/emails/activation": {
      "put": {
        "tags": [
          "email"
        ],
        "summary": "Verify email activation code",
        "operationId": "emailActivate",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          "400": {
            "description": "Invalid activation supplied"
          },
          "404": {
            "description": "Email not found"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "first_name"
        },
        "lastName": {
          "type": "string",
          "description": "last_name"
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "unique"
        },
        "phone": {
          "type": "string",
          "description": "tel"
        },
        "birthday": {
          "type": "string",
          "description": "date_of_birth"
        },
        "ssn": {
          "type": "string",
          "pattern": "^\\d{3}-\\d{2}-\\d{4}$",
          "description": "social_security_number"
        },
        "country": {
          "type": "string"
        },
        "region": {
          "type": "string",
          "description": "state"
        },
        "city": {
          "type": "string",
          "description": "city"
        },
        "street": {
          "type": "string",
          "description": "address under a city"
        },
        "zip": {
          "type": "string",
          "description": "zip_code"
        },
        "passport": {
          "type": "string",
          "format": "byte",
          "description": "image of passport"
        },
        "wallet": {
          "type": "string",
          "description": "wallet address"
        },
        "did": {
          "type": "string",
          "description": "decentralized identifier"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "create_timestamp: Taiwan timezone"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "updated_timestamp: Taiwan timezone"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Email": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "description": "email: unique"
        },
        "code": {
          "type": "string",
          "description": "activation code: random numbers with lowercase characters. string length: 6"
        },
        "valid": {
          "type": "boolean",
          "description": "email activation status"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "create_timestamp: Taiwan timezone"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "update_timestamp: Taiwan timezone"
        }
      },
      "xml": {
        "name": "Email"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about IDHub",
    "url": "http://idhub.network"
  }
}